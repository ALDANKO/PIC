Перем СтруктураВкладок;
Перем СтароеЗначениеКоличества;
Перем СтароеЗначениеКонОстаток;
Перем ТекКолонка;
Перем СпНомеровДней Экспорт;
Перем ТипыКолонок;
Перем СтароеЗначениеОсадки;

Процедура КнопкаВыполнитьНажатие(Кнопка)
ПараметрыВыхода=ЗаполнитьпараметрыВыхода(); 
Закрыть(ПараметрыВыхода);
КонецПроцедуры

Процедура ОбновлениеОтображения()
	//СтраницаПанели = ЭлементыФормы.ПанельВидов.Страницы;
	//ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("Количество", 0);
	//Для каждого стрТЧ из ЭтотОбъект.Метаданные().ТабличныеЧасти Цикл
	//		НайденныеСтроки = ЭтаФорма["ТЗ_"+стрТЧ.Имя].НайтиСтроки(ПараметрыОтбора);
	//		СтраницаПанели[стрТЧ.Имя].Заголовок = СтраницаПанели[стрТЧ.Имя].Имя+" ("+ Формат(ЭтаФорма["ТЗ_"+стрТЧ.Имя].Количество()-НайденныеСтроки.Количество(),"ЧДЦ=0; ЧГ=0") + " поз.)";
	//КонецЦикла;
КонецПроцедуры

Процедура ПриОткрытии()
	УстановкаНачальныхЗначений();
	ОбновитьДанные();
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	Если МойДокумент = неопределено  тогда
		отказ = истина;
	КонецЕсли;
КонецПроцедуры

Функция ЗаполнитьпараметрыВыхода()
   ОбщаяТЗ = новый ТаблицаЗначений;
   ОбщаяТЗ.Колонки.Добавить("Количество");
   ОбщаяТЗ.Колонки.Добавить("Номенклатура");
   ОбщаяТЗ.Колонки.Добавить("Осадка_план");
   ОбщаяТЗ.Колонки.Добавить("Комментарий");
	
   Шаг=0;
   ВсегоТаблиц = ЭтотОбъект.Метаданные().ТабличныеЧасти.Количество()-1;
   Пока ВсегоТаблиц > Шаг Цикл //СтруктураВкладок.Количество()
			//Выгрузим в ТЗ все,что не с нулем количеством и срочно
			ТекТаблица = ЭтаФорма["ТЗ_"+ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя];
			СтруктураДляПоиска = Новый Структура;
			СтруктураДляПоиска.Вставить("Коррект_задания", 0); 
			СтруктураДляПоиска.Вставить("Комментарий", ""); 
			МассивПустыхСтрок = ТекТаблица.НайтиСтроки(СтруктураДляПоиска); 
			Для каждого Строка Из МассивПустыхСтрок Цикл 
				ТекТаблица.Удалить(Строка); 
			КонецЦикла; 
			Для каждого СтрТЗ из ТекТаблица Цикл
				Если СтрТЗ.Коррект_задания<>0 или сОКРлп(СтрТЗ.Комментарий)<>"" тогда
					//((СокрЛП(ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя)="Вареные" или СокрЛП(ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя)="Полукопченые")и СтрТЗ.Осадка_план<>0) тогда
					НовСтр=ОбщаяТЗ.Добавить();
				 	НовСтр.Номенклатура =СтрТЗ.Номенклатура;
				 	НовСтр.Количество	=СтрТЗ.Коррект_задания;
					//Если СокрЛП(ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя)="Вареные" или СокрЛП(ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя)="Полукопченые" ТОГДА
					//	НовСтр.Осадка_план	=СтрТЗ.Осадка_план;
					//КонецЕсли;
					НовСтр.Комментарий  =СтрТЗ.Комментарий;
				КонецЕсли;	
			КонецЦикла;
		Шаг=Шаг+1;	
	КонецЦикла;
	СтрДанных=новый Структура;	
	СтрДанных.Вставить("ОбщаяТЗ",ОбщаяТЗ);
   возврат СтрДанных;
КонецФункции

Процедура ПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ=Истина;
КонецПроцедуры

Процедура ПередУдалением(Элемент, Отказ)
	Отказ=Истина;
КонецПроцедуры

Процедура ОсновныеДействияФормыОбновитьДанные(Кнопка)
		ОбновитьДанные();
КонецПроцедуры

Процедура УстановкаНачальныхЗначений()
КонецПроцедуры

Процедура ОбновитьДанные()
	
	СпНомеровДней	=	новый ТаблицаЗначений;
	СпНомеровДней.Колонки.Добавить("НомерДняНедели");
	Если НачалоДня(ДатаНачАнализаОтгрузкиПокупателям)=НачалоДня(ДатаКонАнализаОтгрузкиПокупателям)	тогда
		НовДень=СпНомеровДней.Добавить();
		НовДень.НомерДняНедели=ДеньНедели(ДатаНачАнализаОтгрузкиПокупателям);
	Иначе
		КоличествоДней = Окр((ДатаКонАнализаОтгрузкиПокупателям - ДатаНачАнализаОтгрузкиПокупателям)/60/60/24,0,1);	
		Шаг=0;
		Пока Шаг<КоличествоДней Цикл
			НовДень=СпНомеровДней.Добавить();
			НовДень.НомерДняНедели=ДеньНедели(ДатаНачАнализаОтгрузкиПокупателям+24*3600*Шаг);
			ШАг=Шаг+1;
		КонецЦикла;	
	КонецЕсли;		
	
	//*** найти перечень клиентов отгружаемых на этот день
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтрагентыДниНеделиОтгрузки.Ссылка КАК Ссылка, 
		|	КонтрагентыДниНеделиОтгрузки.МетодПланирования 
		|ИЗ
		|	Справочник.Контрагенты.ДниНеделиОтгрузки КАК КонтрагентыДниНеделиОтгрузки
		|ГДЕ
		|	КонтрагентыДниНеделиОтгрузки.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И КонтрагентыДниНеделиОтгрузки.Ссылка.Покупатель = ИСТИНА
		|	И КонтрагентыДниНеделиОтгрузки.Ссылка.ПланироватьЗаказ = ИСТИНА
		|	И КонтрагентыДниНеделиОтгрузки.МетодПланирования <> ЗНАЧЕНИЕ(Перечисление.ВидПланированияЗаказа.НеПланируется)
		|	И КонтрагентыДниНеделиОтгрузки.НомерСтроки В (&НомерДняНедели)";
	
	Запрос.УстановитьПараметр("НомерДняНедели",СпНомеровДней);
	
	ОсобыеКлиенты= Запрос.Выполнить().Выгрузить();
	ОсобыеКлиенты.Сортировать("МетодПланирования");	
	
	//*** найти перечень групп клиентов 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И Контрагенты.ЭтоГруппа = ИСТИНА
		|	И Контрагенты.Родитель.Код = ""000000001""";
	ОсобыеГруппыКлиенты= Запрос.Выполнить().Выгрузить();
	ВсегоТаблиц = ЭтотОбъект.Метаданные().ТабличныеЧасти.Количество();
	Шаг=0;
	Пока ВсегоТаблиц > Шаг Цикл 
		Состояние("Обрабатывается "+СтруктураВкладок[Шаг].Название);
		Запрос = Новый Запрос;
		СтруктДопЗапросов=СформироватьТекстыЗапросовПоКонтрагентам(ОсобыеКлиенты);
		ТекстЗапросаОсобыеКлиенты	=	"";
		ТекстЛевыхСодединений		=	"";
		ТекстКолонок				=	"";
		Если СтруктДопЗапросов<>неопределено тогда
			Для Каждого стрЗ из СтруктДопЗапросов.ТЗ_Запросов Цикл
				ТекстЗапросаОсобыеКлиенты	=	ТекстЗапросаОсобыеКлиенты+стрЗ.СтрТекст;
			КонецЦикла;
			
			Для Каждого стрЗ из СтруктДопЗапросов.ТЗ_ЛевСоединений Цикл
				ТекстЛевыхСодединений=	ТекстЛевыхСодединений+стрЗ.СтрТекст;
			КонецЦикла;
			
			Для Каждого стрЗ из СтруктДопЗапросов.ТЗ_КолонокВывода Цикл
				ТекстКолонок=	ТекстКолонок+стрЗ.СтрТекст;
			КонецЦикла;
		КонецЕсли;
		СтруктДопГруппЗапросов=СформироватьТекстыЗапросовПоГруппам(ОсобыеГруппыКлиенты);						
		Если СтруктДопГруппЗапросов<>неопределено тогда
			Для Каждого стрЗ из СтруктДопГруппЗапросов.ТЗ_Запросов Цикл
				ТекстЗапросаОсобыеКлиенты	=	ТекстЗапросаОсобыеКлиенты+стрЗ.СтрТекст;
			КонецЦикла;
			
			Для Каждого стрЗ из СтруктДопГруппЗапросов.ТЗ_ЛевСоединений Цикл
				ТекстЛевыхСодединений=	ТекстЛевыхСодединений+стрЗ.СтрТекст;
			КонецЦикла;
			
			Для Каждого стрЗ из СтруктДопГруппЗапросов.ТЗ_КолонокВывода Цикл
				ТекстКолонок=	ТекстКолонок+стрЗ.СтрТекст;
			КонецЦикла;
		КонецЕсли;
		
		Запрос.Текст = 	"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ СписТовар
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Родитель = &Родитель
		|	И Номенклатура.ПометкаУдаления = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказНаПроизводствоПродукция.Номенклатура,
		|	СУММА(ЗаказНаПроизводствоПродукция.Количество) КАК Количество,
		|	СУММА(ЗаказНаПроизводствоПродукция.Осадка) КАК Осадка_план,
		|	ПОДСТРОКА(ЗаказНаПроизводствоПродукция.Комментарий, 0, 30) КАК Комментарий
		|ПОМЕСТИТЬ ТекущийДокумент
		|ИЗ
		|Документ.ЗаказНаПроизводство.Продукция КАК ЗаказНаПроизводствоПродукция
		|ГДЕ
		|	ЗаказНаПроизводствоПродукция.Ссылка.Ссылка = &Ссылка
		|	И ЗаказНаПроизводствоПродукция.Номенклатура.Ссылка В
		|			(ВЫБРАТЬ
		|				СписТовар.Ссылка
		|			ИЗ
		|				СписТовар)
		
		|СГРУППИРОВАТЬ ПО
		|	ЗаказНаПроизводствоПродукция.Номенклатура,
		|	ПОДСТРОКА(ЗаказНаПроизводствоПродукция.Комментарий, 0, 30)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
		|	ТоварыНаСкладахОстатки.Номенклатура
		|ПОМЕСТИТЬ ТоварОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаОстатков, Склад = &Склад) КАК ТоварыНаСкладахОстатки
		|ГДЕ
		|	ТоварыНаСкладахОстатки.Номенклатура.Ссылка В
		|			(ВЫБРАТЬ
		|				СписТовар.Ссылка
		|			ИЗ
		|				СписТовар)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИтогОсадки.Номенклатура,
		|	ИтогОсадки.КоличествоПриход КАК Осадка
		|ПОМЕСТИТЬ ТоварОсадка
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(НАЧАЛОПЕРИОДА(&ДатаОстатков, ДЕНЬ), КОНЕЦПЕРИОДА(&ДатаОстатков, ДЕНЬ), , Движения, Склад=&СкладОсадки ) КАК ИтогОсадки
		|ГДЕ
		|	ИтогОсадки.Номенклатура.Ссылка В
		|			(ВЫБРАТЬ
		|				СписТовар.Ссылка
		|			ИЗ
		|				СписТовар)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(РеализацияТоваровУслуг.КоличествоЗаявки) КАК ИтогоТекущийЗаказ,
		|	РеализацияТоваровУслуг.Номенклатура
		|ПОМЕСТИТЬ ИтогТекущегоЗаказа
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И РеализацияТоваровУслуг.Ссылка.Дата >= НачалоПериода(&ДатаИсполнения,День)
		|	И РеализацияТоваровУслуг.Ссылка.Дата<= КонецПериода(&ДатаИсполнения,День)
		|	И РеализацияТоваровУслуг.Номенклатура В
		|			(ВЫБРАТЬ
		|				СписТовар.Ссылка
		|			ИЗ
		|				СписТовар)
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслуг.Номенклатура							
		|;";
		
		Если СтруктураВкладок[Шаг].Группа.Код="000000015" или СтруктураВкладок[Шаг].Группа.Код="000000038" тогда
			Запрос.Текст = Запрос.Текст +" ВЫБРАТЬ
				  |	РеализацияТоваровУслуг.Номенклатура,
				  |	СУММА(РеализацияТоваровУслуг.Количество) КАК КолОсадкаПлан 
				  |ПОМЕСТИТЬ АнализОсадки 
				  |ИЗ
				  |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
				  |ГДЕ
				  |	РеализацияТоваровУслуг.Ссылка.ПометкаУдаления = ЛОЖЬ
				  |	И РеализацияТоваровУслуг.Ссылка.Дата>= НачалоПериода(&ДатаАнализаПродажОсадкиНач,День)
				  |	И РеализацияТоваровУслуг.Ссылка.Дата<= КонецПериода(&ДатаАнализаПродажОсадкиКон,День)
				  |	И РеализацияТоваровУслуг.Номенклатура В
				  |			(ВЫБРАТЬ
				  |				СписТовар.Ссылка
				  |			ИЗ
				  |				СписТовар)
				  |
				  |СГРУППИРОВАТЬ ПО
				  |	РеализацияТоваровУслуг.Номенклатура
				  | ;";
		КонецЕсли;	
		
		Запрос.Текст = 	Запрос.Текст +"
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(РеализацияТоваровУслуг.Количество) КАК ОтгрузкаПредыдущегоПериода,
		|	РеализацияТоваровУслуг.Номенклатура
		|ПОМЕСТИТЬ ПродаждаПредыдущегоПериода
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И РеализацияТоваровУслуг.Ссылка.Дата >= &НачДатаЗаказаПокупателя
		|	И РеализацияТоваровУслуг.Ссылка.Дата <= &КонДатаЗаказаПокупателя
		|	И РеализацияТоваровУслуг.Номенклатура В
		|			(ВЫБРАТЬ
		|				СписТовар.Ссылка
		|			ИЗ
		|				СписТовар)
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслуг.Номенклатура;";
		Запрос.Текст = 	Запрос.Текст +ТекстЗапросаОсобыеКлиенты;
		Запрос.Текст = 	Запрос.Текст +"
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписТовар.Ссылка КАК Номенклатура,
		|	ЕСТЬNULL(ПродаждаПредыдущегоПериода.ОтгрузкаПредыдущегоПериода, 0) КАК Отгрузка_предыдущего_периода,
		|	ЕСТЬNULL(ТоварОстаток.Остаток, 0) КАК Остаток_на_сегодня,
		|	ЕСТЬNULL(ТоварОсадка.Осадка, 0) КАК Осадка_на_сегодня,
		|	ЕСТЬNULL(ПродаждаПредыдущегоПериода.ОтгрузкаПредыдущегоПериода,0)-(ЕСТЬNULL(ТоварОсадка.Осадка, 0)+ЕСТЬNULL(ТоварОстаток.Остаток, 0)) КАК Предварительное_задание,";
		
		Запрос.Текст = 	Запрос.Текст +ТекстКолонок;
		Запрос.Текст = 	Запрос.Текст +"
		|	ЕСТЬNULL(ИтогТекущегоЗаказа.ИтогоТекущийЗаказ, 0) КАК Сумма_заявок_клиентов,
		|   ЕСТЬNULL(ТекущийДокумент.Количество,0) КАК Коррект_задания,		
		|	(ЕСТЬNULL(ИтогТекущегоЗаказа.ИтогоТекущийЗаказ, 0)+ЕСТЬNULL(ТекущийДокумент.Количество,0)) - (ЕСТЬNULL(ТоварОстаток.Остаток, 0) + ЕСТЬNULL(ТоварОсадка.Осадка, 0)) КАК Текущее_задание_на_производство,";
		
		//|	ВЫБОР
		//|		КОГДА (ЕСТЬNULL(ТоварОстаток.Остаток, 0) - ЕСТЬNULL(ИтогТекущегоЗаказа.ИтогоТекущийЗаказ, 0) + ЕСТЬNULL(ТоварОсадка.Осадка, 0) +ЕСТЬNULL(ТекущийДокумент.Количество,
		//|	ВЫБОР
		//|		КОГДА ЕСТЬNULL(ИтогТекущегоЗаказа.ИтогоТекущийЗаказ, 0) - (ЕСТЬNULL(ТоварОстаток.Остаток, 0) + ЕСТЬNULL(ТоварОсадка.Осадка, 0) ) > 0
		//|			ТОГДА ЕСТЬNULL(ИтогТекущегоЗаказа.ИтогоТекущийЗаказ, 0) - (ЕСТЬNULL(ТоварОстаток.Остаток, 0) + ЕСТЬNULL(ТоварОсадка.Осадка, 0) )
		//|		ИНАЧЕ 0
		//|	КОНЕЦ)) > 0
		//|			ТОГДА ЕСТЬNULL(ТоварОстаток.Остаток, 0) - ЕСТЬNULL(ИтогТекущегоЗаказа.ИтогоТекущийЗаказ, 0) + ЕСТЬNULL(ТоварОсадка.Осадка, 0)+ЕСТЬNULL(ТекущийДокумент.Количество,
		//|	ВЫБОР
		//|		КОГДА ЕСТЬNULL(ИтогТекущегоЗаказа.ИтогоТекущийЗаказ, 0) - (ЕСТЬNULL(ТоварОстаток.Остаток, 0) + ЕСТЬNULL(ТоварОсадка.Осадка, 0) ) > 0
		//|			ТОГДА ЕСТЬNULL(ИтогТекущегоЗаказа.ИтогоТекущийЗаказ, 0) - (ЕСТЬNULL(ТоварОстаток.Остаток, 0) + ЕСТЬNULL(ТоварОсадка.Осадка, 0) )
		//|		ИНАЧЕ 0 КОНЕЦ)
		//|		ИНАЧЕ 0 КОНЕЦ КАК Кон_Остаток,  ";
		                                                                               
		Если СтруктураВкладок[Шаг].Группа.Код="000000015" или СтруктураВкладок[Шаг].Группа.Код="000000038" тогда
			Запрос.Текст = 	Запрос.Текст +" 
		|	ЕСТЬNULL(АнализОсадки.КолОсадкаПлан, 0) КАК Осадка_продажи_предыдущего_периода,
		|	ВЫБОР КОГДА (ЕСТЬNULL(ИтогТекущегоЗаказа.ИтогоТекущийЗаказ, 0)+ЕСТЬNULL(ТекущийДокумент.Количество,0)) -(ЕСТЬNULL(ТоварОстаток.Остаток, 0) + ЕСТЬNULL(ТоварОсадка.Осадка, 0))>0 ТОГДА
		|   ЕСТЬNULL(АнализОсадки.КолОсадкаПлан, 0) ИНАЧЕ      
		|       (ЕСТЬNULL(ИтогТекущегоЗаказа.ИтогоТекущийЗаказ, 0)+ЕСТЬNULL(ТекущийДокумент.Количество,0)+ЕСТЬNULL(АнализОсадки.КолОсадкаПлан, 0)) - (ЕСТЬNULL(ТоварОстаток.Остаток, 0) + ЕСТЬNULL(ТоварОсадка.Осадка, 0)) 
		|       КОНЕЦ КАК Осадка_задание,";
		
		//|	ВЫБОР КОГДА ((ЕСТЬNULL(ИтогТекущегоЗаказа.ИтогоТекущийЗаказ, 0)+ЕСТЬNULL(ТекущийДокумент.Количество,0)+ЕСТЬNULL(АнализОсадки.КолОсадкаПлан, 0)) -
		//|		(ЕСТЬNULL(ТоварОстаток.Остаток, 0) + ЕСТЬNULL(ТоварОсадка.Осадка, 0)))< 0  ИЛИ ЕСТЬNULL(АнализОсадки.КолОсадкаПлан, 0) =0
		//|		ТОГДА 0 ИНАЧЕ 
		//|        ВЫБОР КОГДА ЕСТЬNULL(АнализОсадки.КолОсадкаПлан, 0) > ((ЕСТЬNULL(ТоварОстаток.Остаток, 0) + ЕСТЬNULL(ТоварОсадка.Осадка, 0))-(ЕСТЬNULL(ИтогТекущегоЗаказа.ИтогоТекущийЗаказ, 0)+ЕСТЬNULL(ТекущийДокумент.Количество,0))) ТОГДА
		//|       (ЕСТЬNULL(ИтогТекущегоЗаказа.ИтогоТекущийЗаказ, 0)+ЕСТЬNULL(ТекущийДокумент.Количество,0)+ЕСТЬNULL(АнализОсадки.КолОсадкаПлан, 0)) - (ЕСТЬNULL(ТоварОстаток.Остаток, 0) + ЕСТЬNULL(ТоварОсадка.Осадка, 0)) ИНАЧЕ 0 КОНЕЦ 
		//|       КОНЕЦ  КАК Осадка_задание,";
		КонецЕсли;	

		Запрос.Текст = 	Запрос.Текст +"		
		|	ЕСТЬNULL(ТекущийДокумент.Комментарий,&Комментарий) КАК Комментарий
		|ИЗ
		|	СписТовар КАК СписТовар
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварОстаток КАК ТоварОстаток
		|		ПО СписТовар.Ссылка = ТоварОстаток.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогТекущегоЗаказа КАК ИтогТекущегоЗаказа
		|		ПО СписТовар.Ссылка = ИтогТекущегоЗаказа.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварОсадка КАК ТоварОсадка
		|		ПО СписТовар.Ссылка = ТоварОсадка.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТекущийДокумент КАК ТекущийДокумент
		|		ПО СписТовар.Ссылка = ТекущийДокумент.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПродаждаПредыдущегоПериода КАК ПродаждаПредыдущегоПериода
		|		ПО СписТовар.Ссылка = ПродаждаПредыдущегоПериода.Номенклатура";
		
		Запрос.Текст = 	Запрос.Текст +ТекстЛевыхСодединений;
		                                          //*** вареные                                 
		Если СтруктураВкладок[Шаг].Группа.Код="000000015" или СтруктураВкладок[Шаг].Группа.Код="000000038" тогда
			Запрос.Текст = 	Запрос.Текст +" 
			|		ЛЕВОЕ СОЕДИНЕНИЕ АнализОсадки КАК АнализОсадки
			|		ПО СписТовар.Ссылка = АнализОсадки.Номенклатура ";
			
		КонецЕсли;	
		
		Запрос.Текст = 	Запрос.Текст +" 
		|
		|УПОРЯДОЧИТЬ ПО
		|	СписТовар.Ссылка.Наименование";
		
		Запрос.УстановитьПараметр("Родитель", СтруктураВкладок[Шаг].Группа);
		Запрос.УстановитьПараметр("ДатаОстатков",КонецДня(ЭтотОбъект.Дата));
		Запрос.УстановитьПараметр("Склад" , ЭтотОбъект.Склад );
		Запрос.УстановитьПараметр("ДатаИсполнения",ЭтотОбъект.ДатаИсполнения);
		Запрос.УстановитьПараметр("НачДатаЗаказаПокупателя",НачалоДня(ЭтотОбъект.ДатаНачАнализаОтгрузкиПокупателям));
		Запрос.УстановитьПараметр("КонДатаЗаказаПокупателя",КонецДня(ЭтотОбъект.ДатаКонАнализаОтгрузкиПокупателям));
		Запрос.УстановитьПараметр("СпНомеровДней",СпНомеровДней);
		Запрос.УстановитьПараметр("Комментарий","                           ");
		Запрос.УстановитьПараметр("Ссылка",МойДокумент.Ссылка);
		Запрос.УстановитьПараметр("СкладОсадки",Справочники.Склады.НайтиПоКоду("000000004"));
		Запрос.УстановитьПараметр("ДатаАнализаПродажОсадкиНач",?(СтруктураВкладок[Шаг].Группа.Код="000000015",ДатаПродажПредыдПериодаВареныхНач,ДатаПродажПредыдПериодаПолукопченыхНач));
		Запрос.УстановитьПараметр("ДатаАнализаПродажОсадкиКон",?(СтруктураВкладок[Шаг].Группа.Код="000000015",ДатаПродажПредыдПериодаВареныхКон,ДатаПродажПредыдПериодаПолукопченыхКон));
		
		Результат = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		Если не Результат.Пустой() тогда
			ЭтаФорма["ТЗ_"+ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя]=Результат.Выгрузить();
			ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].Значение=ЭтаФорма["ТЗ_"+ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя];
			ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].СоздатьКолонки();
			Для каждого стр из ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].Колонки Цикл
				ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].Колонки[стр.Имя].ТолькоПросмотр=?(СокрЛП(стр.Имя)="Комментарий" или СокрЛП(стр.Имя)="Коррект_задания",Ложь,Истина);
				Если СокрЛП(стр.Имя)<>"Комментарий" и СокрЛП(стр.Имя)<>"Номенклатура" тогда
					ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].Колонки[стр.Имя].ВыделятьОтрицательные=Истина;
				КонецЕсли;
				Если не СокрЛП(стр.Имя)="Комментарий" и не СокрЛП(стр.Имя)="Номенклатура" тогда
					ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].Колонки[стр.Имя].Ширина = 6;
				Иначе	
					ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].Колонки[стр.Имя].Ширина = 30;
				КонецЕсли;	
				
				Если Найти(СокрЛП(ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].Колонки[стр.Имя].ТекстШапки),"_")>0 тогда
					ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].Колонки[стр.Имя].ТекстШапки=ДополнительныеФункции.ЗаменитьСимволыНаПробелы(СокрЛП(ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].Колонки[стр.Имя].ТекстШапки),"_");
				КонецЕсли;
			КонецЦикла;	
			ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].Колонки.Предварительное_задание.ЦветФонаПоля=WebЦвета.СветлоЖелтый;
			ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].Колонки.Текущее_задание_на_производство.ЦветФонаПоля=WebЦвета.СветлоЖелтый;
			Если ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].Колонки.Найти("Осадка_задание")<>неопределено тогда
				ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].Колонки.Осадка_задание.ЦветФонаПоля=WebЦвета.СветлоЖелтый;	
			КонецЕсли;
			ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].ФиксацияСлева=1;
			ЭлементыФормы[ЭтотОбъект.Метаданные().ТабличныеЧасти[Шаг].Имя].ИзменятьПозициюКолонок = Ложь;
		КонецЕсли;	
		Шаг=Шаг+1;
	КонецЦикла;
   Состояние("");
КонецПроцедуры

Процедура ПриПолученииДанных(Элемент, ОформленияСтрок)
	Для Каждого строка из  ОформленияСтрок Цикл
		//Если строка.ДанныеСтроки.ТорговаяМарка = Перечисления.ТорговыеМарки.КД Тогда
		//	строка.ЦветФона = WebЦвета.Голубой;
		//Иначе
		//	строка.ЦветФона = WebЦвета.Белый;
		//КонецЕсли;
		//Если строка.ДанныеСтроки.Необходимо >=0 тогда
		//	строка.Ячейки.РазницаЗаказаОтгрузки.ЦветФона=WebЦвета.СветлоЖелтый;
		//Иначе
		//    строка.Ячейки.РазницаЗаказаОтгрузки.ЦветФона=WebЦвета.СветлоРозовый;
		//КонецЕсли;
		//Если строка.ДанныеСтроки.КонОстаток >=0 тогда
		//	строка.Ячейки.КонОстаток.ЦветФона=WebЦвета.СветлоЖелтый;
		//Иначе
		//	строка.Ячейки.КонОстаток.ЦветФона=WebЦвета.СветлоРозовый;
		//КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

Процедура КоличествоПриИзменении(Элемент)
	//СтрокаТЧ = ЭлементыФормы[ЭтаФорма.ТекущийЭлемент.Имя].ТекущаяСтрока;	
	//СтрокаТЧ.ЗаказаноПокупателями	= СтрокаТЧ.ЗаказаноПокупателями+СтрокаТЧ.Количество-СтароеЗначениеКоличества; 
	//СтрокаТЧ.КонОстаток		= СтрокаТЧ.Необходимо+СтрокаТЧ.ЗаказаноПокупателями-СтрокаТЧ.ЗаказНаПеред; 
КонецПроцедуры

Процедура ПередНачаломИзменения(Элемент, Отказ)
 СтрокаТабличнойЧасти 			= ЭлементыФормы[ЭтаФорма.ТекущийЭлемент.Имя].ТекущаяСтрока;
 СтароеЗначениеКоличества		= СтрокаТабличнойЧасти.Коррект_задания;
 //СтароеЗначениеКонОстаток    	= СтрокаТабличнойЧасти.Кон_Остаток;
 //Если ЭтаФорма.ТекущийЭлемент.Имя="Вареные" или ЭтаФорма.ТекущийЭлемент.Имя="Полукопченые" тогда
 //	СтароеЗначениеОсадки		=СтрокаТабличнойЧасти.Осадка_план;
 //КонецЕсли;
КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)
	Элемент.Значение=НачалоДня(Элемент.Значение);	
КонецПроцедуры

Процедура ДатаКонЗаказаОтгрузкиПриИзменении(Элемент)
	Элемент.Значение=КонецДня(Элемент.Значение);		
КонецПроцедуры

//Процедура ОчиститьДанные()
//	Шаг=0;
//	ВсегоТаблиц = ЭтотОбъект.Метаданные().ТабличныеЧасти.Количество()-1;
//	Пока ВсегоТаблиц > Шаг Цикл //СтруктураВкладок.Количество()
//			ТекТаблица = ЭтотОбъект[СтруктураВкладок[Шаг].Название];
//			ТекТаблица.Очистить();
//		Шаг=Шаг+1;	
//	КонецЦикла;
//КонецПроцедуры

Функция СформироватьТекстыЗапросовПоГруппам(Группы)
	Если Группы=неопределено или ТипЗнч(Группы)<>Тип("ТаблицаЗначений")
		или Группы.Количество()=0 тогда
		возврат неопределено;
	КонецЕсли;	
	ТЗ_ЗАПРОСОВ			=новый ТаблицаЗначений;
	ТЗ_ЗАПРОСОВ.Колонки.Добавить("СтрТекст");
	ТЗ_ЛевСоединений    =новый ТаблицаЗначений;
	ТЗ_ЛевСоединений.Колонки.Добавить("СтрТекст");
	ТЗ_КолонокВывода    =новый ТаблицаЗначений;
	ТЗ_КолонокВывода.Колонки.Добавить("СтрТекст");
	Для каждого стр из Группы Цикл
			а=ТЗ_ЗАПРОСОВ.Добавить();
			а.СтрТекст=ПолучитьЗапросПоГруппе(стр.Ссылка);
			б=ТЗ_ЛевСоединений.Добавить();
			б.СтрТекст=ПолучитьЛевСоединение(стр.Ссылка);
			в=ТЗ_КолонокВывода.Добавить();
			в.СтрТекст=ПолучитьКолонкуВывода(стр.Ссылка);
	КонецЦикла;
	СтруктДляЗапроса=новый Структура;
	СтруктДляЗапроса.Вставить("ТЗ_Запросов",ТЗ_ЗАПРОСОВ);
	СтруктДляЗапроса.Вставить("ТЗ_ЛевСоединений",ТЗ_ЛевСоединений);
	СтруктДляЗапроса.Вставить("ТЗ_КолонокВывода",ТЗ_КолонокВывода);
	возврат СтруктДляЗапроса;
КонецФункции

Функция ПолучитьЗапросПоГруппе(Группа)
		Назв=СокрЛП(Группа.Наименование);
		Назв=ДополнительныеФункции.ЗаменитьПробелы(Назв, "_");
		ТекстЗАпроса="
	              |
				  |ВЫБРАТЬ
	              |	РеализацияТоваровУслуг.Номенклатура,
	              |	СУММА(РеализацияТоваровУслуг.Количество) КАК "+Назв+" 
	              |ПОМЕСТИТЬ ВТ_"+Назв+" 
	              |ИЗ
	              |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	              |ГДЕ
	              |	РеализацияТоваровУслуг.Ссылка.ПометкаУдаления = ЛОЖЬ
	              |	И РеализацияТоваровУслуг.Ссылка.Контрагент.Родитель.Код = """+Группа.Код+"""
	              |	И РеализацияТоваровУслуг.Ссылка.Дата>= НачалоПериода(&ДатаИсполнения,День)
	              |	И РеализацияТоваровУслуг.Ссылка.Дата<= КонецПериода(&ДатаИсполнения,День)
	              |	И РеализацияТоваровУслуг.Номенклатура В
	              |			(ВЫБРАТЬ
	              |				СписТовар.Ссылка
	              |			ИЗ
	              |				СписТовар)
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	РеализацияТоваровУслуг.Номенклатура
				  |;
				  | ";
	
	возврат ТекстЗАпроса;
КонецФункции	


Функция СформироватьТекстыЗапросовПоКонтрагентам(ОсобыеКлиенты)
	Если ОсобыеКлиенты=неопределено или ТипЗнч(ОсобыеКлиенты)<>Тип("ТаблицаЗначений")
		или ОсобыеКлиенты.Количество() =0 тогда
		возврат неопределено;
	КонецЕсли;	
	ТЗ_ЗАПРОСОВ			=новый ТаблицаЗначений;
	ТЗ_ЗАПРОСОВ.Колонки.Добавить("СтрТекст");
	ТЗ_ЛевСоединений    =новый ТаблицаЗначений;
	ТЗ_ЛевСоединений.Колонки.Добавить("СтрТекст");
	ТЗ_КолонокВывода    =новый ТаблицаЗначений;
	ТЗ_КолонокВывода.Колонки.Добавить("СтрТекст");
	
	Для каждого стр из ОсобыеКлиенты Цикл
		Если стр.МетодПланирования=Перечисления.ВидПланированияЗаказа.ПоОтгрузке тогда
			а=ТЗ_ЗАПРОСОВ.Добавить();
			а.СтрТекст=ПолучитьЗапросПоЗаказу(стр.Ссылка);
			б=ТЗ_ЛевСоединений.Добавить();
			б.СтрТекст=ПолучитьЛевСоединение(стр.Ссылка);
			в=ТЗ_КолонокВывода.Добавить();
			в.СтрТекст=ПолучитьКолонкуВывода(стр.Ссылка);
		ИначеЕсли стр.МетодПланирования=Перечисления.ВидПланированияЗаказа.Константа тогда	
			а=ТЗ_ЗАПРОСОВ.Добавить();
			а.СтрТекст=ПолучитьЗапросПоКонстанте(стр.Ссылка);
			б=ТЗ_ЛевСоединений.Добавить();
			б.СтрТекст=ПолучитьЛевСоединение(стр.Ссылка);
			в=ТЗ_КолонокВывода.Добавить();
			в.СтрТекст=ПолучитьКолонкуВывода(стр.Ссылка);
		КонецЕсли;	
	КонецЦикла;
	СтруктДляЗапроса=новый Структура;
	СтруктДляЗапроса.Вставить("ТЗ_Запросов",ТЗ_ЗАПРОСОВ);
	СтруктДляЗапроса.Вставить("ТЗ_ЛевСоединений",ТЗ_ЛевСоединений);
	СтруктДляЗапроса.Вставить("ТЗ_КолонокВывода",ТЗ_КолонокВывода);
	возврат СтруктДляЗапроса;
КонецФункции

Функция	ПолучитьЗапросПоКонстанте(КА)
	Назв=СокрЛП(КА.Наименование);
	Назв=ДополнительныеФункции.ЗаменитьПробелы(Назв, "_");
	ТекстЗАпроса="
				 |ВЫБРАТЬ
	             |	КонтрагентыПланОтгрузки.Номенклатура,
	             |	СУММА(КонтрагентыПланОтгрузки.Количество) КАК  "+Назв+" 
				 | ПОМЕСТИТЬ ВТ_"+Назв+" 
	             |ИЗ
	             |	Справочник.Контрагенты.ПланОтгрузки КАК КонтрагентыПланОтгрузки
	             |ГДЕ
	             |	КонтрагентыПланОтгрузки.Ссылка.Код = """+КА.Код+"""
	             |	И КонтрагентыПланОтгрузки.ДеньНедели В(&СпНомеровДней)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	КонтрагентыПланОтгрузки.Номенклатура
				 | 
				 |;";
	
	возврат ТекстЗАпроса;
КонецФункции

Функция ПолучитьКолонкуВывода(КА)
	Назв=СокрЛП(КА.Наименование);
	Назв=ДополнительныеФункции.ЗаменитьПробелы(Назв, "_");
	ТекстЗАпроса="
               	|		ЕСТЬNULL(ВТ_"+Назв+"."+Назв+",0) КАК "+Назв+",";
	возврат ТекстЗАпроса;	
КонецФункции

Функция ПолучитьЛевСоединение(КА)
	Назв=СокрЛП(КА.Наименование);
	Назв=ДополнительныеФункции.ЗаменитьПробелы(Назв, "_");
	ТекстЗАпроса="
               	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_"+Назв+"  КАК ВТ_"+Назв+" 
               	|		ПО СписТовар.Ссылка = ВТ_"+Назв+".Номенклатура";
	возврат ТекстЗАпроса;
КонецФункции
//*** !!! на самом деле по отгрузке
Функция ПолучитьЗапросПоЗаказу(КА)
	Назв=СокрЛП(КА.Наименование);
	Назв=ДополнительныеФункции.ЗаменитьПробелы(Назв, "_");
	ТекстЗАпроса="
	              |
				  |ВЫБРАТЬ
	              |	РеализацияТоваровУслуг.Номенклатура,
	              |	СУММА(РеализацияТоваровУслуг.Количество) КАК "+Назв+" 
	              |ПОМЕСТИТЬ ВТ_"+Назв+" 
	              |ИЗ
	              |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	              |ГДЕ
	              |	РеализацияТоваровУслуг.Ссылка.ПометкаУдаления = ЛОЖЬ
	              |	И РеализацияТоваровУслуг.Ссылка.Контрагент.Код = """+КА.Код+"""
	              |	И РеализацияТоваровУслуг.Ссылка.Дата>= НачалоПериода(&ДатаИсполнения,День)
	              |	И РеализацияТоваровУслуг.Ссылка.Дата<= КонецПериода(&ДатаИсполнения,День)
	              |	И РеализацияТоваровУслуг.Номенклатура В
	              |			(ВЫБРАТЬ
	              |				СписТовар.Ссылка
	              |			ИЗ
	              |				СписТовар)
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	РеализацияТоваровУслуг.Номенклатура
				  |;
				  | ";
	
	возврат ТекстЗАпроса;
КонецФункции

Процедура ВареныеПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	СтрокаТЧ = ЭлементыФормы[ЭтаФорма.ТекущийЭлемент.Имя].ТекущаяСтрока;	
	Если Элемент.ТекущаяКолонка.Имя = "Коррект_задания" тогда
		СтрокаТЧ.Текущее_задание_на_производство		= (СтрокаТЧ.Сумма_заявок_клиентов+СтрокаТЧ.Коррект_задания)-(СтрокаТЧ.Остаток_на_сегодня+СтрокаТЧ.Осадка_на_сегодня); 
	КонецЕсли;	
	Если ЭтаФорма.ТекущийЭлемент.Данные="ТЗ_Вареные" или ЭтаФорма.ТекущийЭлемент.Данные="ТЗ_Полукопченые" ТОГДА
		СтрокаТЧ.Осадка_задание		=  СтрокаТЧ.Осадка_продажи_предыдущего_периода+МИН(СтрокаТЧ.Текущее_задание_на_производство,0) ;
	КонецЕсли;	
КонецПроцедуры

СтруктураВкладок = новый ТаблицаЗначений;
СтруктураВкладок.Колонки.Добавить("Номер");//	,Тип("Число"));
СтруктураВкладок.Колонки.Добавить("Название");//,Тип("Строка"));
СтруктураВкладок.Колонки.Добавить("Группа"	);//,Тип("Справочники.Номенклатура"));
Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ
|	Номенклатура.ЭтоГруппа,
|	Номенклатура.Наименование КАК Название,
|	Номенклатура.Ссылка  КАК Ссылка
|ИЗ
|	Справочник.Номенклатура КАК Номенклатура
|ГДЕ
|	Номенклатура.ЭтоГруппа = ИСТИНА
|	И Номенклатура.Родитель.Код = ""000000004""
|	И Номенклатура.Код <> ""000000037""
|	И Номенклатура.ПометкаУдаления = ЛОЖЬ
|
|УПОРЯДОЧИТЬ ПО
|	Номенклатура.Наименование";
Результат = Запрос.Выполнить();
ВыборкаДетальныеЗаписи = Результат.Выбрать();
Шаг=0;
Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	НовСтрока=СтруктураВкладок.Добавить();
	НовСтрока.Номер	= Шаг;
	
	Метка=Найти(СокрЛП(ВыборкаДетальныеЗаписи.Название)," ");
	Если Метка=0 тогда
		НовСтрока.Название = ТРег(СокрЛП(ВыборкаДетальныеЗаписи.Название));
	Иначе
		Название=СокрЛП(ВыборкаДетальныеЗаписи.Название);
		НовСтрока.Название=ТРег(СокрЛП(Сред(Название,0,Метка-1)))+ТРег(СокрЛП(Сред(Название,Метка)));
	КонецЕсли;
	НовСтрока.Группа	= ВыборкаДетальныеЗаписи.Ссылка;
	Шаг=Шаг+1;
КонецЦикла;

// Начальные значения переменным
СтароеЗначениеКоличества	=0;
СтароеЗначениеКонОстаток	=0;
СтароеЗначениеОсадки		=0;
 