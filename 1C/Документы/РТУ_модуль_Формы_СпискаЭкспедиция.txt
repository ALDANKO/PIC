
Процедура ДействияФормыПечатьКомплекта(Кнопка)
	
	Если ЭтаФорма.ЭлементыФормы.ДокументСписок.ТекущаяСтрока = Неопределено тогда
		Возврат
	КонецЕсли;
	
	ТекущаяСтрока = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	МойДокумент = ТекущаяСтрока.Ссылка.ПолучитьОбъект();
	
	ВсегоКПечати=МойДокумент.Контрагент.КоличествоЭкземпляровРасходныхНакладных+
				 МойДокумент.Контрагент.КоличествоЭкземпляровКачественногоСвидетельства+
				 МойДокумент.Контрагент.КоличествоЭкземпляровНакладныхМенеджеру;
				 
	Если ВсегоКПечати=0 тогда
		КоличествоЭкземпляровРасходных=1;
		КоличествоЭкземпляровКачественных=0;
		КоличествоЭкземпляровМенеджеру=0;
	ИНАЧЕ 
		КоличествоЭкземпляровРасходных		=	МойДокумент.Контрагент.КоличествоЭкземпляровРасходныхНакладных;
		КоличествоЭкземпляровКачественных	=	МойДокумент.Контрагент.КоличествоЭкземпляровКачественногоСвидетельства;
		КоличествоЭкземпляровМенеджеру		=	МойДокумент.Контрагент.КоличествоЭкземпляровНакладныхМенеджеру;
	КонецЕсли;
	
	Если КоличествоЭкземпляровРасходных<>0 тогда
		ДокументПечати =МойДокумент.ПечатьДокумента();
		УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, КоличествоЭкземпляровРасходных, Истина);
	КонецЕсли;
	
	
	//Если КоличествоЭкземпляровКачественных<>0 тогда   //***КоличествоЭкземпляровКачественных
	//	//ДокументПечати =МойДокумент.ПечатьКачественногоСвидетельства();
	//    ДокументПечати =МойДокумент.ПечатьДекларацииПроизводителя();
	//	УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, КоличествоЭкземпляровКачественных, Истина);
	//КонецЕсли;
	//
	//
	//Если КоличествоЭкземпляровМенеджеру<>0 тогда   //****   КоличествоЭкземпляровМенеджеру
	//	ДокументПечати =МойДокумент.ПечатьМенеджеру();
	//	УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, КоличествоЭкземпляровМенеджеру, Истина);
	//КонецЕсли;
	//
	//
	//Если МойДокумент.Контрагент.Код="000002617" ИЛИ 
	//     МойДокумент.Контрагент.Код="000002616"  тогда
	//    ДокументПечати =МойДокумент.ПечатьНакладнойПоддоныФоззи();
	//	УниверсальныеМеханизмы.НапечататьДокумент(ДокументПечати, 2, Истина);
	//КонецЕсли;    
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ЭлементыФормы.ДатаОтбора.Значение=ТекущаяДата();
КонецПроцедуры

Процедура ИзменитьНажатие(Элемент)
	ОткрытьДокумент();	
КонецПроцедуры

Процедура КнопкаДобавитьНажатие(Элемент)
	МойДОк=Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	МояФорма=МойДОк.ПолучитьФорму("ФормаДокументаЭкспедиция");
	МояФорма.ОткрытьМодально();
КонецПроцедуры

Процедура КнопкаУдалитьНажатие(Элемент)
	ТекСтр=ЭлементыФормы.ДокументСписок.ТекущаяСтрока ;
	Если ТекСтр = Неопределено тогда
		возврат;
	КонецЕсли;
	ТекОб=ТекСтр.Ссылка.ПолучитьОбъект();
	ТекОб.ПометкаУдаления=не ТекОб.ПометкаУдаления;
	ТекОб.Записать();
КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)
	ЗапускОтборПоДате();
КонецПроцедуры

Процедура ЗапускОтборПоДате()
	Отбор.Дата.ЗначениеС=НачалоДня(ЭлементыФормы.ДатаОтбора.Значение);
	Отбор.Дата.ЗначениеПо=КонецДня(ЭлементыФормы.ДатаОтбора.Значение);
	Отбор.Дата.Использование=Истина;
КонецПроцедуры

Процедура КонтрагентОтбораПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда
		Отбор.Контрагент.Значение=Элемент.Значение;
		Отбор.Контрагент.ВидСравнения=ВидСравнения.Равно;
		Отбор.Контрагент.Использование=Истина;
	Иначе
		Элемент.Значение=Справочники.Контрагенты.ПустаяСсылка();		
		Отбор.Контрагент.Использование=Ложь;
	КонецЕсли;		
КонецПроцедуры

Процедура КонтрагентОтбораНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=ложь;
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	Контрагенты.Ссылка
	              |ИЗ
	              |	Справочник.Контрагенты КАК Контрагенты
	              |ГДЕ
	              |	Контрагенты.ПометкаУдаления = ЛОЖЬ
	              |	И (Контрагенты.Родитель.Код = ""000000001""
	              |			ИЛИ Контрагенты.Родитель.Код = ""000000004"")";
	//Запрос.УстановитьПараметр("Подразделение",ЭтотОбъект.Подразделение);
	Результат = Запрос.Выполнить();

	Список = Новый СписокЗначений;
	Список.ЗагрузитьЗначения(Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"));
	ФормаВыбора = Справочники.Контрагенты.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.Ссылка.ВидСравнения=	ВидСравнения.ВСписке;
	ФормаВыбора.Отбор.Ссылка.Значение	 =	Список;
	ФормаВыбора.Отбор.Ссылка.Использование = Истина;
	ФормаВыбора.ЗакрыватьПриВыборе=Истина;
	ФормаВыбора.ЗакрыватьПриЗакрытииВладельца=Истина;
	ФормаВыбора.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Ложь;
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();
КонецПроцедуры

Процедура КонтрагентОтбораОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Элемент.Значение=Справочники.Контрагенты.ПустаяСсылка();
	Отбор.Контрагент.Использование=Ложь;	
КонецПроцедуры

Процедура ДокументСписокПередНачаломИзменения(Элемент, Отказ)
	ОткрытьДокумент();
	Отказ = Истина;
КонецПроцедуры
 
Процедура ОткрытьДокумент()
	ТекСтр=ЭлементыФормы.ДокументСписок.ТекущаяСтрока ;
	Если ТекСтр = Неопределено тогда
		возврат;
	КонецЕсли;
	ТекОб=ТекСтр.Ссылка.ПолучитьОбъект();
	ФормаОператор = ТекОб.ПолучитьФорму("ФормаДокументаЭкспедиция");
	ФормаОператор.ПоложениеОкна=ВариантПоложенияОкна.Центрировать;
	ФормаОператор.СпособОтображенияОкна=ВариантСпособаОтображенияОкна.Максимизированное;
	ФормаОператор.Открыть();    
КонецПроцедуры

Процедура ПриОткрытии()
	ЗапускОтборПоДате();	
КонецПроцедуры

Процедура ДокументСписокПриПолученииДанных(Элемент, ОформленияСтрок)
		//***170212
    Для Каждого строка из  ОформленияСтрок Цикл
        Если строка.ДанныеСтроки.ЕстьУпаковка Тогда
            строка.ЦветФона = WebЦвета.СветлоСерый;
        Иначе
            строка.ЦветФона = WebЦвета.Белый;
		КонецЕсли;
    КонецЦикла;
КонецПроцедуры
